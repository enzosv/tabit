//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Habits = newHabitsTable("", "habits", "")

type habitsTable struct {
	sqlite.Table

	// Columns
	HabitID   sqlite.ColumnInteger
	UserID    sqlite.ColumnString
	Name      sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
	DefaultColumns sqlite.ColumnList
}

type HabitsTable struct {
	habitsTable

	EXCLUDED habitsTable
}

// AS creates new HabitsTable with assigned alias
func (a HabitsTable) AS(alias string) *HabitsTable {
	return newHabitsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new HabitsTable with assigned schema name
func (a HabitsTable) FromSchema(schemaName string) *HabitsTable {
	return newHabitsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new HabitsTable with assigned table prefix
func (a HabitsTable) WithPrefix(prefix string) *HabitsTable {
	return newHabitsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new HabitsTable with assigned table suffix
func (a HabitsTable) WithSuffix(suffix string) *HabitsTable {
	return newHabitsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newHabitsTable(schemaName, tableName, alias string) *HabitsTable {
	return &HabitsTable{
		habitsTable: newHabitsTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newHabitsTableImpl("", "excluded", ""),
	}
}

func newHabitsTableImpl(schemaName, tableName, alias string) habitsTable {
	var (
		HabitIDColumn   = sqlite.IntegerColumn("habit_id")
		UserIDColumn    = sqlite.StringColumn("user_id")
		NameColumn      = sqlite.StringColumn("name")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{HabitIDColumn, UserIDColumn, NameColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{UserIDColumn, NameColumn, CreatedAtColumn}
		defaultColumns  = sqlite.ColumnList{CreatedAtColumn}
	)

	return habitsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		HabitID:   HabitIDColumn,
		UserID:    UserIDColumn,
		Name:      NameColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
